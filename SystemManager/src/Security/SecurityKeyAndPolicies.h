/*
* Copyright (C) 2013 Nivis LLC.
* Email:   opensource@nivis.com
* Website: http://www.nivis.com
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation, version 3 of the License.
* 
* Redistribution and use in source and binary forms must retain this
* copyright notice.

* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>.
*
*/

/*
 * SecurityKeyAndPolicies.h
 *
 *  Created on: Oct 5, 2009
 *      Author: Sorin.Bidian
 */

#ifndef SECURITYKEYANDPOLICIES_H_
#define SECURITYKEYANDPOLICIES_H_

#include "Common/NEAddress.h"
#include "Common/smTypes.h"
#include <Model/SecurityKey.h>
#include <Model/Policy.h>

namespace Isa100 {
namespace Security {

/**
 * Security key and polices to be authenticated, decrypted and stored by a device participating in a session.
 */
struct SecurityKeyAndPolicies {

        /**
         * Key_Policy shall be populated by the security manager based
         * on its security policies for this session.
         */
        NE::Model::Policy keyPolicy;

        /**
         * Elided for DL or Master Key.
         */
        Uint16 endPortSource;

        /**
         * Elided for DL or Master Key.
         */
        Address64 EUI64Remote;

        /**
         * 128_Bit_Address_remote shall be the 128-bit network address of the remote end device in this session.
         * In the case of the DL Key or Master Key, this field shall be elided.
         */
        Address128 remoteAddress128;

        /**
         * End_Port_remote shall be the 16 bit port of the remote end UAP in this session.
         * In the case of the DL Key or Master Key, this field shall be elided.
         */
        Uint16 endPortRemote;

        /**
         * Algorithm_Identifier defines the algorithm and mode of operation supported in this session.
         * In the current release this shall be set to 0x1 = AES_CCM*.
         */
        Uint8 algorithmIdentifier;

        /**
         * Security_Control shall be with the security level = 0x05 (ENC-MIC-32) and the Key Identifier Mode
         * shall be b1b0 = �01� corresponding to a Key Index Field length of 1 octet.
         */
        Uint8 securityControl;

        /**
         * Key_Identifier shall be the key identifier of the master key used in protecting this structure.
         */
        Uint8 keyIdentifier;

        /**
         * Time_Stamp shall be the full 32-bit time used in the nonce construction.
         */
        Uint32 timeStamp;

        /**
         * New_Key_ID shall be the 8 bit key ID assigned to this key material by the security manager.
         */
        Uint8 newKeyID;

        /**
         * Key_Material shall be a 128 bit key used for this session.
         */
        NE::Model::SecurityKey keyMaterial;

        /**
         * MIC shall be the 32-bit integrity code generated by the AES_CCM* computation. Network Order.
         */
        Uint8 MIC[4];

};

}
}

#endif /* SECURITYKEYANDPOLICIES_H_ */
